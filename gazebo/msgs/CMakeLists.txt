include (${gazebo_cmake_dir}/GazeboUtils.cmake)

set (msgs
axis.proto
boxgeom.proto
camerasensor.proto
collision.proto
contact.proto
contactsensor.proto
contacts.proto
cylindergeom.proto
diagnostics.proto
factory.proto
fog.proto
friction.proto
geometry.proto
gps.proto
gui_camera.proto
gui_overlay_config.proto
gui.proto
header.proto
heightmapgeom.proto
imagegeom.proto
imu.proto
inertial.proto
joint_animation.proto
joint.proto
light.proto
link_data.proto
link.proto
log_control.proto
log_status.proto
material.proto
meshgeom.proto
model_configuration.proto
model.proto
model_v.proto
physics.proto
planegeom.proto
plugin.proto
pose_animation.proto
projector.proto
propagation_grid.proto
propagation_particle.proto
publishers.proto
publish.proto
raysensor.proto
request.proto
response.proto
road.proto
scene.proto
selection.proto
sensor.proto
server_control.proto
shadows.proto
sky.proto
spheregeom.proto
subscribe.proto
surface.proto
tactile.proto
test.proto
topic_info.proto
track_visual.proto
visual.proto
wireless_node.proto
wireless_nodes.proto
world_control.proto
world_modify.proto
world_reset.proto
world_stats.proto
)

set (msgs_tests_sources
  msgs_TEST.cc
  MsgFactory_TEST.cc
)
gz_build_tests(${msgs_tests_sources})

include_directories(${CMAKE_CURRENT_BINARY_DIR})

add_executable(gazebomsgs_out generator/GazeboGenerator.cc generator/gazebo_generator.cc)
target_link_libraries(gazebomsgs_out ${PROTOBUF_LIBRARY} ${PROTOBUF_PROTOC_LIBRARY} pthread)

set (sources msgs.cc MsgFactory.cc)
set (headers msgs.hh MsgFactory.hh)

set(PROTO_SRCS)
set(PROTO_HDRS)

message (STATUS ${ROBOT_MSGS_PROTO_DIR})
foreach(FIL ${msgs})
  get_filename_component(ABS_FIL ${FIL} ABSOLUTE)
  get_filename_component(FIL_WE ${FIL} NAME_WE)

  list(APPEND PROTO_SRCS "${CMAKE_CURRENT_BINARY_DIR}/${FIL_WE}.pb.cc")
  list(APPEND PROTO_HDRS "${CMAKE_CURRENT_BINARY_DIR}/${FIL_WE}.pb.h")

  add_custom_command(
    OUTPUT
      "${CMAKE_CURRENT_BINARY_DIR}/${FIL_WE}.pb.cc"
      "${CMAKE_CURRENT_BINARY_DIR}/${FIL_WE}.pb.h"
    COMMAND  ${PROTOBUF_PROTOC_EXECUTABLE}
    ARGS --plugin=protoc-gen-gazebomsgs=${CMAKE_CURRENT_BINARY_DIR}/gazebomsgs_out --cpp_out ${CMAKE_CURRENT_BINARY_DIR} --gazebomsgs_out ${CMAKE_CURRENT_BINARY_DIR} --proto_path ${CMAKE_CURRENT_SOURCE_DIR} --proto_path ${ROBOT_MSGS_PROTO_DIR} ${ABS_FIL}
    DEPENDS ${ABS_FIL} gazebomsgs_out
    COMMENT "Running C++ protocol buffer compiler on ${FIL}"
    VERBATIM )
endforeach()

set_source_files_properties(${PROTO_SRCS} ${PROTO_HDRS} PROPERTIES GENERATED TRUE)

gz_add_library(gazebo_msgs ${PROTO_SRCS} ${sources})
target_link_libraries(gazebo_msgs
  gazebo_common
  gazebo_math
  ${ROBOT_MSGS_LIBRARIES} 
  ${PROTOBUF_LIBRARY}
)

add_dependencies(gazebo_msgs gazebomsgs_out)

set (message_headers "" CACHE INTERNAL "Include dirs description")

foreach (hdr ${PROTO_HDRS})
  string (REPLACE "${CMAKE_CURRENT_BINARY_DIR}/" "" hdr ${hdr})
  APPEND_TO_CACHED_STRING(message_headers
    "Message Types" "#include \"${hdr}\"\n")
endforeach()
configure_file (${PROJECT_SOURCE_DIR}/gazebo/msgs/MessageTypes.hh.in
                ${CMAKE_CURRENT_BINARY_DIR}/MessageTypes.hh )

gz_install_library(gazebo_msgs)
gz_install_includes("msgs" ${PROTO_HDRS} ${headers} ${CMAKE_CURRENT_BINARY_DIR}/MessageTypes.hh)
gz_install_includes("msgs/proto" ${msgs})
